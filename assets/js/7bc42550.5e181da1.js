"use strict";(self.webpackChunktypegraphql_prisma_website=self.webpackChunktypegraphql_prisma_website||[]).push([[223],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,y=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(y,i(i({ref:t},l),{},{components:r})):n.createElement(y,i({ref:t},l))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2447:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={title:"Custom Prisma Client context key",sidebar_label:"Prisma context key",sidebar_position:14},i=void 0,s={unversionedId:"advanced/custom-prisma-context-key",id:"advanced/custom-prisma-context-key",title:"Custom Prisma Client context key",description:"By default, typegraphql-prisma looks in runtime for Prisma Client in the GraphQL context under the prisma key.",source:"@site/../docs/advanced/custom-prisma-context-key.md",sourceDirName:"advanced",slug:"/advanced/custom-prisma-context-key",permalink:"/docs/advanced/custom-prisma-context-key",draft:!1,editUrl:"https://github.com/nestql/prisma-crud/edit/main/docs/../docs/advanced/custom-prisma-context-key.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{title:"Custom Prisma Client context key",sidebar_label:"Prisma context key",sidebar_position:14},sidebar:"docs",previous:{title:"Prisma import path",permalink:"/docs/advanced/custom-prisma-import"},next:{title:"Custom plural form",permalink:"/docs/advanced/override-plural"}},c={},p=[],l={toc:p};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"By default, ",(0,a.kt)("inlineCode",{parentName:"p"},"typegraphql-prisma")," looks in runtime for Prisma Client in the GraphQL context under the ",(0,a.kt)("inlineCode",{parentName:"p"},"prisma")," key."),(0,a.kt)("p",null,"However, in some cases like when you have multiple Prisma clients generated, you can provide a generator option to set the custom key for context object, where the Prisma Client can be found:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-prisma",metastring:"{3}","{3}":!0},'generator typegraphql {\n  provider         = "typegraphql-prisma"\n  contextPrismaKey = "customPrisma"\n}\n')),(0,a.kt)("p",null,"By using this option, all the generated resolvers will try to use the Prisma Client from ",(0,a.kt)("inlineCode",{parentName:"p"},'context["customPrisma"]')," instead of the standard ",(0,a.kt)("inlineCode",{parentName:"p"},"context.prisma"),"."))}m.isMDXComponent=!0}}]);